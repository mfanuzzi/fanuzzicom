THREE.STLLoader=function(n){this.manager=n!==undefined?n:THREE.DefaultLoadingManager};THREE.STLLoader.prototype={constructor:THREE.STLLoader,load:function(n,t,i,r){var u=this,f=new THREE.FileLoader(u.manager);f.setResponseType("arraybuffer");f.load(n,function(n){t(u.parse(n))},i,r)},parse:function(n){var i=function(){var r,u,f,n,e,i;if(n=new DataView(t),u=50,f=n.getUint32(80,!0),r=84+f*u,r===n.byteLength)return!0;for(e=n.byteLength,i=0;i<e;i++)if(n.getUint8(i,!1)>127)return!0;return!1},t=this.ensureBinary(n);return i()?this.parseBinary(t):this.parseASCII(this.ensureString(n))},parseBinary:function(n){for(var s,f,h,c,t=new DataView(n),g=t.getUint32(80,!0),l,a,v,e=!1,y,p,w,b,k,i=0;i<70;i++)t.getUint32(i,!1)==1129270351&&t.getUint8(i+4)==82&&t.getUint8(i+5)==61&&(e=!0,y=[],p=t.getUint8(i+6)/255,w=t.getUint8(i+7)/255,b=t.getUint8(i+8)/255,k=t.getUint8(i+9)/255);var r=new THREE.BufferGeometry,o=[],d=[];for(s=0;s<g;s++){var u=84+s*50,nt=t.getFloat32(u,!0),tt=t.getFloat32(u+4,!0),it=t.getFloat32(u+8,!0);for(e&&(f=t.getUint16(u+48,!0),(f&32768)==0?(l=(f&31)/31,a=(f>>5&31)/31,v=(f>>10&31)/31):(l=p,a=w,v=b)),h=1;h<=3;h++)c=u+h*12,o.push(t.getFloat32(c,!0)),o.push(t.getFloat32(c+4,!0)),o.push(t.getFloat32(c+8,!0)),d.push(nt,tt,it),e&&y.push(l,a,v)}return r.addAttribute("position",new THREE.BufferAttribute(new Float32Array(o),3)),r.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(d),3)),e&&(r.addAttribute("color",new THREE.BufferAttribute(new Float32Array(y),3)),r.hasColors=!0,r.alpha=k),r},parseASCII:function(n){var r,f,e,o,t,u;r=new THREE.BufferGeometry;f=/facet([\s\S]*?)endfacet/g;for(var s=[],h=[],i=new THREE.Vector3;(t=f.exec(n))!==null;){for(u=t[0],e=/normal[\s]+([\-+]?[0-9]+\.?[0-9]*([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+/g;(t=e.exec(u))!==null;)i.x=parseFloat(t[1]),i.y=parseFloat(t[3]),i.z=parseFloat(t[5]);for(o=/vertex[\s]+([\-+]?[0-9]+\.?[0-9]*([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+/g;(t=o.exec(u))!==null;)s.push(parseFloat(t[1]),parseFloat(t[3]),parseFloat(t[5])),h.push(i.x,i.y,i.z)}return r.addAttribute("position",new THREE.BufferAttribute(new Float32Array(s),3)),r.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(h),3)),r},ensureString:function(n){var r,i,t;if(typeof n!="string"){for(r=new Uint8Array(n),i=[],t=0;t<n.byteLength;t++)i.push(String.fromCharCode(r[t]));return i.join("")}return n},ensureBinary:function(n){var i,t;if(typeof n=="string"){for(i=new Uint8Array(n.length),t=0;t<n.length;t++)i[t]=n.charCodeAt(t)&255;return i.buffer||i}return n}};
//# sourceMappingURL=STLLoader.min.js.map
